{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\Sam\\\\Documents\\\\Sam\\\\Code\\\\MathRiddles\\\\mathriddles\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"C:\\\\Users\\\\Sam\\\\Documents\\\\Sam\\\\Code\\\\MathRiddles\\\\mathriddles\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Sam\\\\Documents\\\\Sam\\\\Code\\\\MathRiddles\\\\mathriddles\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\Sam\\\\Documents\\\\Sam\\\\Code\\\\MathRiddles\\\\mathriddles\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Sam\\\\Documents\\\\Sam\\\\Code\\\\MathRiddles\\\\mathriddles\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Sam\\\\Documents\\\\Sam\\\\Code\\\\MathRiddles\\\\mathriddles\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import ReactDOM from'react-dom';import'./Question.css';import Levels from'./Levels';var obj=require(\"./Questions.json\");var Question=/*#__PURE__*/function(_React$Component){_inherits(Question,_React$Component);var _super=_createSuper(Question);function Question(props){var _this;_classCallCheck(this,Question);_this=_super.call(this,props);// the onload value of the input text box is \"\"\n_this.state={value:\"\"};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(Question,[{key:\"handleChange\",value:function handleChange(event){// simultaneously sets state as the user is typing in the text box\nthis.setState({value:event.target.value});}},{key:\"componentDidMount\",value:function componentDidMount(){// when a user clicks enter, their answer is submitted\ndocument.getElementById(\"ans\").addEventListener(\"keyup\",function(event){event.preventDefault();if(event.keyCode===13)document.getElementById(\"ansSubmit\").click();});}},{key:\"render\",value:function render(){var _this2=this;var nextLevelBtn=document.getElementById(\"rightArrow\");// get questions from Questions.json according to the props passed into <Question questionNum = {props} />\nvar questionNum=this.props.questionNum;var getQuestion=obj[\"question\"+questionNum];// renders each individual line of the clue separated by the \\n's from the JSON\nvar output=[];function renderQuestion(){var individualClue=getQuestion.split(\"\\n\");for(var i=0;i<individualClue.length;i++){output.push(/*#__PURE__*/React.createElement(\"h3\",{key:i},individualClue[i]));}}renderQuestion();// when the left arrow is clilcked, render  previous level; if there is none, reload the homepage\nfunction renderPreviousLevel(){if(questionNum===1)document.location.reload();else ReactDOM.render(/*#__PURE__*/React.createElement(React.StrictMode,null,/*#__PURE__*/React.createElement(Question,{questionNum:questionNum-1})),document.getElementById(\"root\"));}/* after the level is solved, when the right arrow is clicked, render next clue, clear the correct/incorrect text\r\n        and input value*/function renderNewLevel(){ReactDOM.render(/*#__PURE__*/React.createElement(React.StrictMode,null,/*#__PURE__*/React.createElement(Question,{questionNum:questionNum+1})),document.getElementById(\"root\"));document.getElementById(\"CorI\").innerHTML=\"\";document.getElementById(\"ans\").value=\"\";nextLevelBtn.onclick=null;nextLevelBtn.setAttribute(\"class\",\"\");}return/*#__PURE__*/React.createElement(\"div\",{className:\"display\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",id:\"leftArrow\",onClick:renderPreviousLevel},\"\\u2190\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",id:\"rightArrow\"},\"\\u2192\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",id:\"toHome\",onClick:function onClick(_){return document.location.reload();}},/*#__PURE__*/React.createElement(\"i\",{className:\"material-icons\"},\"home\")),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",id:\"toLevels\",onClick:function onClick(_){ReactDOM.render(/*#__PURE__*/React.createElement(React.StrictMode,null,/*#__PURE__*/React.createElement(Levels,null)),document.getElementById(\"root\"));}},/*#__PURE__*/React.createElement(\"i\",{className:\"material-icons\"},\"menu\")),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"question\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Level \",questionNum),output,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"ans\",placeholder:\"Answer\",onChange:this.handleChange}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",id:\"ansSubmit\",onClick:function onClick(_){var value=_this2.state.value;var noCommaValue=\"\";// if a comma is present in the input, remove it and store it in noCommaValue\nif(value.includes(\",\")){var splitNumber=value.split(\",\");var _iterator=_createForOfIteratorHelper(splitNumber),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var number=_step.value;noCommaValue+=number;}}catch(err){_iterator.e(err);}finally{_iterator.f();}noCommaValue=Number(noCommaValue);}else noCommaValue=Number(value);// if noCommaValue is not a number or if it's the wrong answer, prompt user to try again\nif(isNaN(noCommaValue))document.getElementById(\"CorI\").innerHTML=\"Not a valid response! Try again.\";else if(noCommaValue!==obj[\"ans\"+questionNum]){document.getElementById(\"CorI\").innerHTML=\"Incorrect! Try again.\";}else{/* add html to notify user that answer is correct, set cookie saying that the level is solved,\r\n                                make the right arrow active, */document.getElementById(\"CorI\").innerHTML=\"Correct! Press the \\\"\\\" key to head to the next level.\";document.cookie=\"\".concat(_this2.props.questionNum,\"=true\");nextLevelBtn.setAttribute(\"class\",\"active\");nextLevelBtn.onclick=function(){renderNewLevel();};document.body.onkeyup=function(event){event.preventDefault();if(event.keyCode===32)nextLevelBtn.click();};}}},\"\\u2191\"),/*#__PURE__*/React.createElement(\"p\",{id:\"CorI\"}))));}}]);return Question;}(React.Component);export default Question;","map":{"version":3,"sources":["C:/Users/Sam/Documents/Sam/Code/MathRiddles/mathriddles/src/Question.js"],"names":["React","ReactDOM","Levels","obj","require","Question","props","state","value","handleChange","bind","event","setState","target","document","getElementById","addEventListener","preventDefault","keyCode","click","nextLevelBtn","questionNum","getQuestion","output","renderQuestion","individualClue","split","i","length","push","renderPreviousLevel","location","reload","render","renderNewLevel","innerHTML","onclick","setAttribute","_","noCommaValue","includes","splitNumber","number","Number","isNaN","cookie","body","onkeyup","Component"],"mappings":"onCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,GAAIC,CAAAA,GAAG,CAAGC,OAAO,CAAC,kBAAD,CAAjB,C,GAEMC,CAAAA,Q,gHACF,kBAAYC,KAAZ,CAAmB,0CACf,uBAAMA,KAAN,EACA;AACA,MAAKC,KAAL,CAAa,CAACC,KAAK,CAAE,EAAR,CAAb,CACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CAJe,aAKlB,C,uEACYC,K,CAAO,CAChB;AACA,KAAKC,QAAL,CAAc,CAACJ,KAAK,CAAEG,KAAK,CAACE,MAAN,CAAaL,KAArB,CAAd,EACH,C,6DACoB,CACjB;AACAM,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,gBAA/B,CAAgD,OAAhD,CAAyD,SAASL,KAAT,CAAgB,CACrEA,KAAK,CAACM,cAAN,GACA,GAAIN,KAAK,CAACO,OAAN,GAAkB,EAAtB,CAA0BJ,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCI,KAArC,GAC7B,CAHD,EAIH,C,uCACQ,iBACL,GAAIC,CAAAA,YAAY,CAAGN,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAnB,CAEA;AACA,GAAIM,CAAAA,WAAW,CAAG,KAAKf,KAAL,CAAWe,WAA7B,CACA,GAAIC,CAAAA,WAAW,CAAGnB,GAAG,CAAC,WAAWkB,WAAZ,CAArB,CAEA;AACA,GAAIE,CAAAA,MAAM,CAAG,EAAb,CACA,QAASC,CAAAA,cAAT,EAA0B,CACtB,GAAIC,CAAAA,cAAc,CAAGH,WAAW,CAACI,KAAZ,CAAkB,IAAlB,CAArB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAC,CAAX,CAAcA,CAAC,CAACF,cAAc,CAACG,MAA/B,CAAuCD,CAAC,EAAxC,CAA4C,CACxCJ,MAAM,CAACM,IAAP,cAAY,0BAAI,GAAG,CAAEF,CAAT,EAAaF,cAAc,CAACE,CAAD,CAA3B,CAAZ,EACH,CACJ,CACDH,cAAc,GAEd;AACA,QAASM,CAAAA,mBAAT,EAA+B,CAC3B,GAAIT,WAAW,GAAK,CAApB,CAAuBP,QAAQ,CAACiB,QAAT,CAAkBC,MAAlB,GAAvB,IACK/B,CAAAA,QAAQ,CAACgC,MAAT,cAAgB,oBAAC,KAAD,CAAO,UAAP,mBAAkB,oBAAC,QAAD,EAAU,WAAW,CAAEZ,WAAW,CAAC,CAAnC,EAAlB,CAAhB,CAA+FP,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA/F,EACR,CAED;yBAEA,QAASmB,CAAAA,cAAT,EAA0B,CACtBjC,QAAQ,CAACgC,MAAT,cAAgB,oBAAC,KAAD,CAAO,UAAP,mBAAkB,oBAAC,QAAD,EAAU,WAAW,CAAEZ,WAAW,CAAC,CAAnC,EAAlB,CAAhB,CAA+FP,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA/F,EACAD,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCoB,SAAhC,CAA4C,EAA5C,CACArB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BP,KAA/B,CAAuC,EAAvC,CACAY,YAAY,CAACgB,OAAb,CAAuB,IAAvB,CACAhB,YAAY,CAACiB,YAAb,CAA0B,OAA1B,CAAmC,EAAnC,EACH,CACD,mBACI,2BAAK,SAAS,CAAC,SAAf,eACI,8BAAQ,IAAI,CAAC,QAAb,CAAsB,EAAE,CAAC,WAAzB,CAAqC,OAAO,CAAEP,mBAA9C,WADJ,cAEI,8BAAQ,IAAI,CAAC,QAAb,CAAsB,EAAE,CAAC,YAAzB,WAFJ,cAGI,8BAAQ,IAAI,CAAC,QAAb,CAAsB,EAAE,CAAC,QAAzB,CAAkC,OAAO,CAAE,iBAAAQ,CAAC,QAAIxB,CAAAA,QAAQ,CAACiB,QAAT,CAAkBC,MAAlB,EAAJ,EAA5C,eAA4E,yBAAG,SAAS,CAAC,gBAAb,SAA5E,CAHJ,cAII,8BAAQ,IAAI,CAAC,QAAb,CAAsB,EAAE,CAAC,UAAzB,CAAoC,OAAO,CAAE,iBAAAM,CAAC,CAAI,CAC9CrC,QAAQ,CAACgC,MAAT,cAAgB,oBAAC,KAAD,CAAO,UAAP,mBAAkB,oBAAC,MAAD,MAAlB,CAAhB,CAAiEnB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAjE,EACH,CAFD,eAEG,yBAAG,SAAS,CAAC,gBAAb,SAFH,CAJJ,cAOI,2BAAK,SAAS,CAAC,WAAf,eACI,2BAAK,SAAS,CAAC,UAAf,eACI,uCAAWM,WAAX,CADJ,CAEKE,MAFL,cAGI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,KAAtB,CAA4B,WAAW,CAAC,QAAxC,CAAiD,QAAQ,CAAE,KAAKd,YAAhE,EAHJ,cAII,8BAAQ,IAAI,CAAC,QAAb,CAAsB,EAAE,CAAC,WAAzB,CAAqC,OAAO,CAAE,iBAAA6B,CAAC,CAAI,CAC/C,GAAI9B,CAAAA,KAAK,CAAG,MAAI,CAACD,KAAL,CAAWC,KAAvB,CACA,GAAI+B,CAAAA,YAAY,CAAG,EAAnB,CAEA;AACA,GAAI/B,KAAK,CAACgC,QAAN,CAAe,GAAf,CAAJ,CAAyB,CACrB,GAAIC,CAAAA,WAAW,CAAGjC,KAAK,CAACkB,KAAN,CAAY,GAAZ,CAAlB,CADqB,yCAEFe,WAFE,YAErB,+CAAgC,IAAvBC,CAAAA,MAAuB,aAAEH,YAAY,EAAIG,MAAhB,CAAyB,CAFtC,qDAGrBH,YAAY,CAAGI,MAAM,CAACJ,YAAD,CAArB,CACH,CAJD,IAKKA,CAAAA,YAAY,CAAGI,MAAM,CAACnC,KAAD,CAArB,CAEL;AACA,GAAIoC,KAAK,CAACL,YAAD,CAAT,CAAyBzB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCoB,SAAhC,CAA4C,kCAA5C,CAAzB,IACK,IAAII,YAAY,GAAKpC,GAAG,CAAC,MAAMkB,WAAP,CAAxB,CAA6C,CAC9CP,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCoB,SAAhC,CAA4C,uBAA5C,CACH,CAFI,IAGA,CACD;+DAEArB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCoB,SAAhC,CAA4C,wDAA5C,CACArB,QAAQ,CAAC+B,MAAT,WAAqB,MAAI,CAACvC,KAAL,CAAWe,WAAhC,UACAD,YAAY,CAACiB,YAAb,CAA0B,OAA1B,CAAmC,QAAnC,EACAjB,YAAY,CAACgB,OAAb,CAAuB,UAAY,CAAEF,cAAc,GAAI,CAAvD,CACApB,QAAQ,CAACgC,IAAT,CAAcC,OAAd,CAAwB,SAASpC,KAAT,CAAgB,CACpCA,KAAK,CAACM,cAAN,GACA,GAAIN,KAAK,CAACO,OAAN,GAAkB,EAAtB,CAA0BE,YAAY,CAACD,KAAb,GAC7B,CAHD,CAIH,CACJ,CA7BD,WAJJ,cAkCI,yBAAG,EAAE,CAAC,MAAN,EAlCJ,CADJ,CAPJ,CADJ,CAgDH,C,sBAlGkBnB,KAAK,CAACgD,S,EAqG7B,cAAe3C,CAAAA,QAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Question.css';\r\nimport Levels from './Levels';\r\nvar obj = require(\"./Questions.json\");\r\n\r\nclass Question extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // the onload value of the input text box is \"\"\r\n        this.state = {value: \"\"}\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        // simultaneously sets state as the user is typing in the text box\r\n        this.setState({value: event.target.value});\r\n    }\r\n    componentDidMount () {\r\n        // when a user clicks enter, their answer is submitted\r\n        document.getElementById(\"ans\").addEventListener(\"keyup\", function(event) {\r\n            event.preventDefault();\r\n            if (event.keyCode === 13) document.getElementById(\"ansSubmit\").click();\r\n        });\r\n    }\r\n    render() {\r\n        var nextLevelBtn = document.getElementById(\"rightArrow\");\r\n        \r\n        // get questions from Questions.json according to the props passed into <Question questionNum = {props} />\r\n        var questionNum = this.props.questionNum;\r\n        var getQuestion = obj[\"question\"+questionNum];\r\n        \r\n        // renders each individual line of the clue separated by the \\n's from the JSON\r\n        var output = [];\r\n        function renderQuestion() {\r\n            var individualClue = getQuestion.split(\"\\n\");\r\n            for (var i=0; i<individualClue.length; i++) {\r\n                output.push(<h3 key={i}>{individualClue[i]}</h3>);\r\n            }\r\n        }\r\n        renderQuestion();\r\n\r\n        // when the left arrow is clilcked, render  previous level; if there is none, reload the homepage\r\n        function renderPreviousLevel() {\r\n            if (questionNum === 1) document.location.reload()\r\n            else ReactDOM.render(<React.StrictMode><Question questionNum={questionNum-1} /></React.StrictMode>, document.getElementById(\"root\"))\r\n        }\r\n\r\n        /* after the level is solved, when the right arrow is clicked, render next clue, clear the correct/incorrect text\r\n        and input value*/\r\n        function renderNewLevel() {\r\n            ReactDOM.render(<React.StrictMode><Question questionNum={questionNum+1} /></React.StrictMode>, document.getElementById(\"root\"));\r\n            document.getElementById(\"CorI\").innerHTML = \"\";\r\n            document.getElementById(\"ans\").value = \"\";\r\n            nextLevelBtn.onclick = null;\r\n            nextLevelBtn.setAttribute(\"class\", \"\");\r\n        }\r\n        return (\r\n            <div className=\"display\">\r\n                <button type=\"button\" id=\"leftArrow\" onClick={renderPreviousLevel}>&larr;</button>\r\n                <button type=\"button\" id=\"rightArrow\">&rarr;</button>\r\n                <button type=\"button\" id=\"toHome\" onClick={_ => document.location.reload()}><i className=\"material-icons\">home</i></button>\r\n                <button type=\"button\" id=\"toLevels\" onClick={_ => {\r\n                    ReactDOM.render(<React.StrictMode><Levels /></React.StrictMode>, document.getElementById(\"root\"));\r\n                }}><i className=\"material-icons\">menu</i></button>\r\n                <div className=\"container\">\r\n                    <div className=\"question\">\r\n                        <h1>Level {questionNum}</h1>\r\n                        {output}\r\n                        <input type=\"text\" id=\"ans\" placeholder=\"Answer\" onChange={this.handleChange}></input>\r\n                        <button type=\"submit\" id=\"ansSubmit\" onClick={_ => {\r\n                            var value = this.state.value;\r\n                            var noCommaValue = \"\";\r\n\r\n                            // if a comma is present in the input, remove it and store it in noCommaValue\r\n                            if (value.includes(\",\")) {\r\n                                var splitNumber = value.split(\",\");\r\n                                for (var number of splitNumber) { noCommaValue += number; }\r\n                                noCommaValue = Number(noCommaValue);\r\n                            }\r\n                            else noCommaValue = Number(value);\r\n\r\n                            // if noCommaValue is not a number or if it's the wrong answer, prompt user to try again\r\n                            if (isNaN(noCommaValue)) document.getElementById(\"CorI\").innerHTML = \"Not a valid response! Try again.\"\r\n                            else if (noCommaValue !== obj[\"ans\"+questionNum]) {\r\n                                document.getElementById(\"CorI\").innerHTML = \"Incorrect! Try again.\";\r\n                            }\r\n                            else {\r\n                                /* add html to notify user that answer is correct, set cookie saying that the level is solved,\r\n                                make the right arrow active, */\r\n                                document.getElementById(\"CorI\").innerHTML = \"Correct! Press the \\\"\\\" key to head to the next level.\";\r\n                                document.cookie = `${this.props.questionNum}=true`;\r\n                                nextLevelBtn.setAttribute(\"class\", \"active\");\r\n                                nextLevelBtn.onclick = function () { renderNewLevel() }\r\n                                document.body.onkeyup = function(event) {\r\n                                    event.preventDefault();\r\n                                    if (event.keyCode === 32) nextLevelBtn.click();\r\n                                };\r\n                            }\r\n                        }}>&uarr;</button>\r\n                        <p id=\"CorI\"></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}